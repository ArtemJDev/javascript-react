let arr3 = new Array(); // пустой массив
let arr4 = new Array(5); // резервируем память для массива
let arr5 = new Array(1, 5, 6, 4, 8, 9, ); // передача параметров массива

console.log(arr5); //вызывается toString
console.log(arr5[0]); //вызывается элемент под индексом

let keys = Object.keys(arr5); // работа с ключами массива

for( let i = 0; i< keys.length; i++) {
    console.log(keys[i]);
}

// arr5.length = 2; //укорачиваем массив
//создание многомерного массива
let matrix = new Array(10);
for( let i = 0; i< matrix.length; i++) {
    matrix[i] = new Array(10)
}

//находится в массиве или нет
if(3 in arr5) {
    console.log("Yes");
}
//является ли массивом
if(Array.isArray(arr5)) {
    console.log("Yes");
}


//манипулирование с массивами join
let arr6 = new Array(1, 5, 6, 4, 8, 9, ); 
console.log(arr6.join(" ")); // преобразование елементов в  единую строку,без параметров + , не работает с вложенными
arr6.reverse(); // изменяеи порядо массива
console.log(arr6);
arr6.sort(); // сортировка в алфавитном порядке - преобразование в строки

arr6.sort(function(a,b) { //переопределение сортировки по умолчанию
    //если первое значение долэно предшестовать, то возхвращает отрицательное значение
    return a-b; //b-a в обратном порядке
});


//concat - слияние
let newArr =  arr6.concat(4,5,6);


//sclice возвращает подмассив
let arr7 = new Array(1, 5, 6, 4, 8, 9, ); 
console.log(arr7.slice(0,4)); //если без второго параметра то до конца массива можно -1(справа)

//sclice может удалять вставлять 1 пар - позиция, 2 - кол-во для удаления, 
//возвращает удаленные,последующие эелементы добавляются(1,2,3,4,5) с позиции удаления(можно 0)
console.log(arr7.splice(1,1,3)); 



//push добавляет в конец и возвращает длину
arr7.push(1);
//pop удаляет в конец и возвращает длину
arr7.pop();
//unshift - добавялет в начало
arr7.unshift(1);
//shift - удаляет из начало
arr7.shift();
//удаление по индексу - разярженный, не смещаются
delete arr7(1);


//1 параметр значение элементов массива, 2-1 индекс, 3 - массив
let arr8 = new Array(1, 5, 6, 4, 8, 9, ); 
arr8.forEach(function(v,i,a) {
    a[i] = v+10 ;
    console.log(a[i]);
});

//map - возвращает новый массив значений, не изменяет начадьный
let arr9 = arr8.map(function(v,i,a) {
    return v*v;
});
console.log(arr9);


//filter - возвращает массив содержищее некоторое кол-во элементов
let arr10 = arr9.filter(function(v,i,a) {
    return v<5; //как только вернет истину - вернется в результирующий массив
});

//every() - true или falce, если все эелементы соответствуют
//some() - true или falce, если какие то эелементы, хотя бы один+

let tOf = arr10.every(function(v,i,a) { //возвращает истину если передаваемая функция, возвращает TRUE дял всех элементов
return v < 5;
});


let arr11 = new Array(1, 5, 6, 4, 8, 9, ); 
//reduce() - для объекдинения элементов массива с пом функции
//ReduceRight - в обратном порядке
 arr11.reduce(function(x,y) { //x - накопленный результат y - текущая ячейка
    return x+y;
    },0); //значение по умолчанию, либо если нет значенеие первой ячейки, для первой итерации

//indexOf(); -= возращает индекс элемента с начала arr.indexOf(3)
//lastIndexOf(); возращает индекс элемента последнего встречания 

//обход массива
for(let key in arr11) {
    console.log(key + " " + arr11[key]);
}